###
## for local dev, wait for db to pass healthcheck before we start node
## also, build custom dockerfile to the dev stage
###

services:
  e2e:
    build:
      target: dev
    command: ['npx', 'playwright', 'test']
    profiles:
      - e2e
    depends_on:
      node-e2e:
        condition: service_started
    environment:
      APP_HOST: node-e2e
      PLAYWRIGHT_HTML_HOST: 0.0.0.0
      # Ideally, it should be stored as a secret, but looks like Prisma
      # basically requires this env var to exist
      DATABASE_URL: postgresql://postgres:postgres@db:5432/mydb?schema=public
    ports:
      - '9323:9323'

  node:
    extends:
      service: base
    depends_on:
      prisma-migrate-deploy:
        condition: service_completed_successfully
    profiles:
      - dev
    environment:
      APP_HOST: localhost
      PLAYWRIGHT_HTML_HOST: 0.0.0.0
    ports:
      - '9323:9323'

  node-e2e:
    extends:
      service: base
    profiles:
      - e2e
    depends_on:
      prisma-db-seed:
        condition: service_completed_successfully

  base:
    build:
      target: dev
    ports:
      - '5173:5173'
    environment:
      # Ideally, it should be stored as a secret, but looks like Prisma
      # basically requires this env var to exist
      DATABASE_URL: postgresql://postgres:postgres@db:5432/mydb?schema=public
      JWT_ACCESS_FILE: /run/secrets/jwt-access
    secrets:
      - jwt-access
    # I don't want this service to run, just to define config common for node
    # and e2e services. Thus, base is not an useful profile, it's just there to
    # avoid running this service when dev or e2e profile is specified.
    profiles:
      - base
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
        - action: rebuild
          path: package.json
        - action: rebuild
          path: package-lock.json

  prisma-db-seed:
    build:
      target: dev
    command: ['npx', 'prisma', 'db', 'seed']
    environment:
      # Ideally, it should be stored as a secret, but looks like Prisma
      # basically requires this env var to exist
      DATABASE_URL: postgresql://postgres:postgres@db:5432/mydb?schema=public
    depends_on:
      prisma-migrate-deploy:
        condition: service_completed_successfully
    profiles:
      - seed
      - e2e

  prisma-migrate-deploy:
    build:
      target: dev
    command: ['npx', 'prisma', 'migrate', 'deploy']
    environment:
      # Ideally, it should be stored as a secret, but looks like Prisma
      # basically requires this env var to exist
      DATABASE_URL: postgresql://postgres:postgres@db:5432/mydb?schema=public
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./prisma/migrations
          target: /app/prisma/migrations

  db:
    image: postgres:alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: '5s'
    secrets:
      - db-password

secrets:
  jwt-access:
    file: secrets/jwt-access
  db-password:
    file: secrets/db-password

volumes:
  db-data:
